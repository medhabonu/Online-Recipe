{"ast":null,"code":"var _jsxFileName = \"/Users/medha/Downloads/LATEST6/frontend/src/pages/recipegenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeGenerator = () => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [recipe, setRecipe] = useState(null);\n  const [error, setError] = useState(null);\n  const handleInputChange = e => setIngredients(e.target.value);\n  const handleSearch = async () => {\n    const ingredientArray = ingredients.split(',').map(ingredient => ingredient.trim());\n    try {\n      // Fetch all recipes from the server\n      const response = await fetch('http://localhost:3000/recipes');\n      if (response.ok) {\n        const data = await response.json();\n        const matchedRecipe = findBestRecipe(data, ingredientArray);\n        if (matchedRecipe) {\n          setRecipe(matchedRecipe);\n          setError(null); // Reset any previous error\n        } else {\n          setError('No recipe found with the provided ingredients');\n          setRecipe(null); // Reset recipe if error occurs\n        }\n      } else {\n        setError('Failed to fetch recipes');\n      }\n    } catch (error) {\n      setError('An error occurred while fetching recipes');\n    }\n  };\n  const findBestRecipe = (recipes, ingredientArray) => {\n    let bestMatch = null;\n    let maxMatchCount = 0;\n    recipes.forEach(recipe => {\n      const recipeIngredients = recipe.ingredients.split(',').map(ingredient => ingredient.trim());\n      const matchCount = recipeIngredients.filter(ingredient => ingredientArray.includes(ingredient)).length;\n      if (matchCount > maxMatchCount) {\n        maxMatchCount = matchCount;\n        bestMatch = recipe;\n      }\n    });\n    return bestMatch;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ingredients,\n      onChange: handleInputChange,\n      placeholder: \"Enter ingredients, separated by commas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSearch,\n      children: \"Generate Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this), recipe && /*#__PURE__*/_jsxDEV(Link, {\n      to: `/recipes/${recipe._id}`,\n      className: \"recipe-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:3000/${recipe.mainImage}`,\n        alt: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipe.ingredients.split(',').map((ing, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ing.trim()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: step\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(RecipeGenerator, \"8C7lWte3aPxvRSdhN09POrmX6qM=\");\n_c = RecipeGenerator;\nexport default RecipeGenerator;\nvar _c;\n$RefreshReg$(_c, \"RecipeGenerator\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","RecipeGenerator","_s","ingredients","setIngredients","recipe","setRecipe","error","setError","handleInputChange","e","target","value","handleSearch","ingredientArray","split","map","ingredient","trim","response","fetch","ok","data","json","matchedRecipe","findBestRecipe","recipes","bestMatch","maxMatchCount","forEach","recipeIngredients","matchCount","filter","includes","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","to","_id","name","src","mainImage","alt","description","ing","index","steps","step","_c","$RefreshReg$"],"sources":["/Users/medha/Downloads/LATEST6/frontend/src/pages/recipegenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RecipeGenerator = () => {\n    const [ingredients, setIngredients] = useState('');\n    const [recipe, setRecipe] = useState(null);\n    const [error, setError] = useState(null);\n\n    const handleInputChange = (e) => setIngredients(e.target.value);\n\n    const handleSearch = async () => {\n        const ingredientArray = ingredients.split(',').map(ingredient => ingredient.trim());\n        try {\n            // Fetch all recipes from the server\n            const response = await fetch('http://localhost:3000/recipes');\n            if (response.ok) {\n                const data = await response.json();\n                const matchedRecipe = findBestRecipe(data, ingredientArray);\n                if (matchedRecipe) {\n                    setRecipe(matchedRecipe);\n                    setError(null); // Reset any previous error\n                } else {\n                    setError('No recipe found with the provided ingredients');\n                    setRecipe(null); // Reset recipe if error occurs\n                }\n            } else {\n                setError('Failed to fetch recipes');\n            }\n        } catch (error) {\n            setError('An error occurred while fetching recipes');\n        }\n    };\n\n    const findBestRecipe = (recipes, ingredientArray) => {\n        let bestMatch = null;\n        let maxMatchCount = 0;\n\n        recipes.forEach(recipe => {\n            const recipeIngredients = recipe.ingredients.split(',').map(ingredient => ingredient.trim());\n            const matchCount = recipeIngredients.filter(ingredient => ingredientArray.includes(ingredient)).length;\n\n            if (matchCount > maxMatchCount) {\n                maxMatchCount = matchCount;\n                bestMatch = recipe;\n            }\n        });\n\n        return bestMatch;\n    };\n\n    return (\n        <div className=\"recipe-generator\">\n            <h1>Recipe Generator</h1>\n            <input\n                type=\"text\"\n                value={ingredients}\n                onChange={handleInputChange}\n                placeholder=\"Enter ingredients, separated by commas\"\n            />\n            <button className=\"btn\" onClick={handleSearch}>Generate Recipe</button>\n\n            {error && <p>{error}</p>}\n\n            {recipe && (\n                <Link to={`/recipes/${recipe._id}`} className=\"recipe-card\">\n                    <h2>{recipe.name}</h2>\n                    <img src={`http://localhost:3000/${recipe.mainImage}`} alt={recipe.name} />\n                    <p>{recipe.description}</p>\n                    <h3>Ingredients:</h3>\n                    <ul>\n                        {recipe.ingredients.split(',').map((ing, index) => (\n                            <li key={index}>{ing.trim()}</li>\n                        ))}\n                    </ul>\n                    <h3>Steps:</h3>\n                    <ol>\n                        {recipe.steps.map((step, index) => (\n                            <li key={index}>{step}</li>\n                        ))}\n                    </ol>\n                </Link>\n            )}\n        </div>\n    );\n};\n\nexport default RecipeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}