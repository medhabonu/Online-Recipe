{"ast":null,"code":"var _jsxFileName = \"/Users/medha/Downloads/LATEST6/frontend/src/pages/cuisines.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport RecipeCard from '../components/RecipeCard'; // Ensure you have your RecipeCard component imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cuisines() {\n  _s();\n  const [cuisines, setCuisines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchCuisines = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/recipes'); // Adjust this API endpoint if necessary\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const categorized = data.reduce((acc, recipe) => {\n        const cuisine = recipe.cuisine || 'Unknown';\n        if (!acc[cuisine]) acc[cuisine] = [];\n        acc[cuisine].push(recipe);\n        return acc;\n      }, {});\n      // Sort cuisines alphabetically\n      const sortedCuisines = Object.entries(categorized).sort(([a], [b]) => a.localeCompare(b));\n      setCuisines(sortedCuisines);\n    } catch (error) {\n      console.error('Error fetching cuisines:', error);\n      setError('Failed to load cuisines. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCuisines();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cuisines\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipes by Cuisine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), cuisines.map(([cuisine, recipes]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cuisine-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: cuisine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-cards\",\n        children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n          recipe: recipe\n        }, recipe._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, cuisine, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Cuisines, \"/YJpesopFHudhQU5f+5AHRZCEFw=\");\n_c = Cuisines;\nvar _c;\n$RefreshReg$(_c, \"Cuisines\");","map":{"version":3,"names":["React","useEffect","useState","RecipeCard","jsxDEV","_jsxDEV","Cuisines","_s","cuisines","setCuisines","loading","setLoading","error","setError","fetchCuisines","response","fetch","ok","Error","data","json","categorized","reduce","acc","recipe","cuisine","push","sortedCuisines","Object","entries","sort","a","b","localeCompare","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","recipes","_id","_c","$RefreshReg$"],"sources":["/Users/medha/Downloads/LATEST6/frontend/src/pages/cuisines.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport RecipeCard from '../components/RecipeCard'; // Ensure you have your RecipeCard component imported\n\nexport default function Cuisines() {\n    const [cuisines, setCuisines] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const fetchCuisines = async () => {\n        try {\n            const response = await fetch('http://localhost:3000/recipes'); // Adjust this API endpoint if necessary\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            const categorized = data.reduce((acc, recipe) => {\n                const cuisine = recipe.cuisine || 'Unknown';\n                if (!acc[cuisine]) acc[cuisine] = [];\n                acc[cuisine].push(recipe);\n                return acc;\n            }, {});\n            // Sort cuisines alphabetically\n            const sortedCuisines = Object.entries(categorized).sort(([a], [b]) => a.localeCompare(b));\n            setCuisines(sortedCuisines);\n        } catch (error) {\n            console.error('Error fetching cuisines:', error);\n            setError('Failed to load cuisines. Please try again later.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchCuisines();\n    }, []);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>{error}</p>;\n\n    return (\n        <div className=\"cuisines\">\n            <h1>Recipes by Cuisine</h1>\n            {cuisines.map(([cuisine, recipes]) => (\n                <div key={cuisine} className=\"cuisine-category\">\n                    <h2>{cuisine}</h2>\n                    <div className=\"recipe-cards\">\n                        {recipes.map(recipe => (\n                            <RecipeCard key={recipe._id} recipe={recipe} />\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;MAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;QAC7C,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO,IAAI,SAAS;QAC3C,IAAI,CAACF,GAAG,CAACE,OAAO,CAAC,EAAEF,GAAG,CAACE,OAAO,CAAC,GAAG,EAAE;QACpCF,GAAG,CAACE,OAAO,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;QACzB,OAAOD,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MACN;MACA,MAAMI,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,CAACS,IAAI,CAAC,CAAC,CAACC,CAAC,CAAC,EAAE,CAACC,CAAC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;MACzFvB,WAAW,CAACkB,cAAc,CAAC;IAC/B,CAAC,CAAC,OAAOf,KAAK,EAAE;MACZsB,OAAO,CAACtB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,kDAAkD,CAAC;IAChE,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZa,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAA8B,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAI3B,KAAK,EAAE,oBAAOP,OAAA;IAAA8B,QAAA,EAAIvB;EAAK;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACIlC,OAAA;IAAKmC,SAAS,EAAC,UAAU;IAAAL,QAAA,gBACrB9B,OAAA;MAAA8B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1B/B,QAAQ,CAACiC,GAAG,CAAC,CAAC,CAAChB,OAAO,EAAEiB,OAAO,CAAC,kBAC7BrC,OAAA;MAAmBmC,SAAS,EAAC,kBAAkB;MAAAL,QAAA,gBAC3C9B,OAAA;QAAA8B,QAAA,EAAKV;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClBlC,OAAA;QAAKmC,SAAS,EAAC,cAAc;QAAAL,QAAA,EACxBO,OAAO,CAACD,GAAG,CAACjB,MAAM,iBACfnB,OAAA,CAACF,UAAU;UAAkBqB,MAAM,EAAEA;QAAO,GAA3BA,MAAM,CAACmB,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,GANAd,OAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAChC,EAAA,CAnDuBD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}