{"ast":null,"code":"var _jsxFileName = \"/Users/medha/Downloads/Internship Final Project/frontend/src/pages/recipes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PreviousSearches from \"../components/PreviousSearches\";\nimport RecipeCard from \"../components/RecipeCard\";\nimport CreateRecipe from '../components/CreateRecipe'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Recipes() {\n  _s();\n  const [recipes, setRecipes] = useState([]); // State to hold recipes\n  const [loading, setLoading] = useState(true); // State to manage loading state\n  const [error, setError] = useState(null); // State to manage error\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  // Fetch recipes from the server\n  const fetchRecipes = async () => {\n    setLoading(true); // Start loading\n    try {\n      const response = await fetch('http://localhost:3000/recipes'); // Adjust the URL if needed\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setRecipes(data); // Set fetched recipes\n      setError(null); // Reset error on successful fetch\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n      setError('Failed to load recipes.'); // Set error message\n    } finally {\n      setLoading(false); // End loading\n    }\n  };\n  const handleSearchSubmit = () => {\n    if (searchTerm) {\n      const results = recipes.filter(recipe => recipe.name.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredResults(results);\n    } else {\n      setFilteredResults([]);\n    }\n  };\n  useEffect(() => {\n    fetchRecipes(); // Call fetchRecipes when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: /*#__PURE__*/_jsxDEV(PreviousSearches, {\n        setSearchTerm: setSearchTerm,\n        handleSearchSubmit: handleSearchSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-tab\",\n      children: /*#__PURE__*/_jsxDEV(CreateRecipe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading recipes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this) // Loading message\n      : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this) // Display error message if any\n      : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredResults.length > 0 ? filteredResults.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n          recipe: recipe\n        }, recipe._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this) // Use _id for unique key\n        ) : recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n          recipe: recipe\n        }, recipe._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this) // Display all recipes if no filter\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Recipes, \"7QUsOeV/qWYSFX2x7mWO8SMJEiA=\");\n_c = Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useState","PreviousSearches","RecipeCard","CreateRecipe","jsxDEV","_jsxDEV","Recipes","_s","recipes","setRecipes","loading","setLoading","error","setError","searchTerm","setSearchTerm","filteredResults","setFilteredResults","fetchRecipes","response","fetch","ok","Error","data","json","console","handleSearchSubmit","results","filter","recipe","name","toLowerCase","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_id","_c","$RefreshReg$"],"sources":["/Users/medha/Downloads/Internship Final Project/frontend/src/pages/recipes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PreviousSearches from \"../components/PreviousSearches\";\nimport RecipeCard from \"../components/RecipeCard\";\nimport CreateRecipe from '../components/CreateRecipe'; // Adjust the path as necessary\n\nexport default function Recipes() {\n    const [recipes, setRecipes] = useState([]); // State to hold recipes\n    const [loading, setLoading] = useState(true); // State to manage loading state\n    const [error, setError] = useState(null); // State to manage error\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    // Fetch recipes from the server\n    const fetchRecipes = async () => {\n        setLoading(true); // Start loading\n        try {\n            const response = await fetch('http://localhost:3000/recipes'); // Adjust the URL if needed\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            setRecipes(data); // Set fetched recipes\n            setError(null); // Reset error on successful fetch\n        } catch (error) {\n            console.error('Error fetching recipes:', error);\n            setError('Failed to load recipes.'); // Set error message\n        } finally {\n            setLoading(false); // End loading\n        }\n    };\n\n    const handleSearchSubmit = () => {\n        if (searchTerm) {\n            const results = recipes.filter(recipe =>\n                recipe.name.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n            setFilteredResults(results);\n        } else {\n            setFilteredResults([]);\n        }\n    };\n\n    useEffect(() => {\n        fetchRecipes(); // Call fetchRecipes when the component mounts\n    }, []);\n\n    return (\n        <div>\n            <div className=\"search-section\">\n                <PreviousSearches setSearchTerm={setSearchTerm} handleSearchSubmit={handleSearchSubmit} />\n            </div>\n            <div className=\"recipes-tab\">\n                <CreateRecipe />\n            </div>\n            <div className=\"recipes-container\">\n                {loading ? (\n                    <p>Loading recipes...</p> // Loading message\n                ) : error ? (\n                    <p>{error}</p> // Display error message if any\n                ) : (\n                    <div>\n                        {filteredResults.length > 0 ? (\n                            filteredResults.map((recipe) => (\n                                <RecipeCard key={recipe._id} recipe={recipe} /> // Use _id for unique key\n                            ))\n                        ) : (\n                            recipes.map((recipe) => (\n                                <RecipeCard key={recipe._id} recipe={recipe} /> // Display all recipes if no filter\n                            ))\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}