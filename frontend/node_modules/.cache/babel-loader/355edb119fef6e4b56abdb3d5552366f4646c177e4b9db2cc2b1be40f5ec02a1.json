{"ast":null,"code":"var _jsxFileName = \"/Users/medha/Downloads/LATEST6/frontend/src/pages/recipegenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeGenerator() {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [generatedRecipes, setGeneratedRecipes] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate(); // Use navigate for routing\n\n  const handleInputChange = e => {\n    setIngredients(e.target.value);\n  };\n  const handleGenerateRecipe = async () => {\n    if (!ingredients) {\n      setErrorMessage('Please enter at least one ingredient.');\n      return;\n    }\n    const ingredientList = ingredients.split(',').map(item => item.trim()).filter(item => item); // Split and trim input\n    const query = new URLSearchParams({\n      ingredients: JSON.stringify(ingredientList)\n    });\n    try {\n      const response = await fetch(`http://localhost:3000/generate-recipe?${query.toString()}`);\n      if (response.ok) {\n        const data = await response.json();\n        setGeneratedRecipes(data); // Set the fetched recipes\n        setErrorMessage(''); // Clear previous error messages\n      } else {\n        console.error('Failed to generate recipe:', response.statusText);\n        setErrorMessage('Failed to generate recipe. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n      setErrorMessage('Error fetching recipes. Please try again.');\n    }\n  };\n  const handleRecipeClick = id => {\n    navigate(`/recipes/${id}`); // Navigate to the recipe details page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter ingredients separated by commas\",\n      value: ingredients,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleGenerateRecipe,\n      children: \"Generate Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generated-recipes\",\n      children: generatedRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-card\",\n        onClick: () => handleRecipeClick(recipe.id) // Click to navigate to details\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.mainImage,\n          alt: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Cuisine: \", recipe.cuisine]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(RecipeGenerator, \"EIPlZR/U7TTA+fG6e2Nxvqr8YF0=\", false, function () {\n  return [useNavigate];\n});\n_c = RecipeGenerator;\nvar _c;\n$RefreshReg$(_c, \"RecipeGenerator\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RecipeGenerator","_s","ingredients","setIngredients","generatedRecipes","setGeneratedRecipes","errorMessage","setErrorMessage","navigate","handleInputChange","e","target","value","handleGenerateRecipe","ingredientList","split","map","item","trim","filter","query","URLSearchParams","JSON","stringify","response","fetch","toString","ok","data","json","console","error","statusText","handleRecipeClick","id","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","recipe","src","mainImage","alt","name","cuisine","description","_c","$RefreshReg$"],"sources":["/Users/medha/Downloads/LATEST6/frontend/src/pages/recipegenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\n\nexport default function RecipeGenerator() {\n    const [ingredients, setIngredients] = useState('');\n    const [generatedRecipes, setGeneratedRecipes] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const navigate = useNavigate(); // Use navigate for routing\n\n    const handleInputChange = (e) => {\n        setIngredients(e.target.value);\n    };\n\n    const handleGenerateRecipe = async () => {\n        if (!ingredients) {\n            setErrorMessage('Please enter at least one ingredient.');\n            return;\n        }\n\n        const ingredientList = ingredients.split(',').map(item => item.trim()).filter(item => item); // Split and trim input\n        const query = new URLSearchParams({ ingredients: JSON.stringify(ingredientList) });\n\n        try {\n            const response = await fetch(`http://localhost:3000/generate-recipe?${query.toString()}`);\n            if (response.ok) {\n                const data = await response.json();\n                setGeneratedRecipes(data); // Set the fetched recipes\n                setErrorMessage(''); // Clear previous error messages\n            } else {\n                console.error('Failed to generate recipe:', response.statusText);\n                setErrorMessage('Failed to generate recipe. Please try again.');\n            }\n        } catch (error) {\n            console.error('Error fetching recipes:', error);\n            setErrorMessage('Error fetching recipes. Please try again.');\n        }\n    };\n\n    const handleRecipeClick = (id) => {\n        navigate(`/recipes/${id}`); // Navigate to the recipe details page\n    };\n\n    return (\n        <div className=\"recipe-generator\">\n            <input\n                type=\"text\"\n                placeholder=\"Enter ingredients separated by commas\"\n                value={ingredients}\n                onChange={handleInputChange}\n            />\n            <button className=\"btn\" onClick={handleGenerateRecipe}>\n                Generate Recipe\n            </button>\n            {errorMessage && <p>{errorMessage}</p>} {/* Display error message */}\n\n            <div className=\"generated-recipes\">\n                {generatedRecipes.map((recipe) => (\n                    <div \n                        key={recipe.id} \n                        className=\"recipe-card\" \n                        onClick={() => handleRecipeClick(recipe.id)} // Click to navigate to details\n                    >\n                        <img src={recipe.mainImage} alt={recipe.name} />\n                        <h2>{recipe.name}</h2>\n                        <h3>Cuisine: {recipe.cuisine}</h3>\n                        <p>{recipe.description}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}